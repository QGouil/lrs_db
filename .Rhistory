axis.title.x = ggplot2::element_text(size=24),
axis.title.y = ggplot2::element_text(size=24),
axis.text    = ggplot2::element_text(size = 20),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=24),
legend.title = element_text(size=30),
legend.position="none",
legend.key=element_rect(fill=NA)
)+
guides(colour = guide_legend(override.aes = list(size = 10))) +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
plot
View(datecount_bionano)
View(datecount_bionano)
# Loading libraries
library(readr)
library(jsonlite)
library(docopt)
library(pbapply)
library(magrittr)
library(futile.logger)
library(aRxiv)
library(reshape2)
library(dplyr)
library(ggplot2)
# load the swsheet here
swsheet <- readr::read_csv("../lrs_db/lrs_tools_master.csv", # get the correct path
col_types = readr::cols(
Tool = readr::col_character(),
DOI = readr::col_character(),
Programming_Language = readr::col_character(),
Details = readr::col_character(),
Source = readr::col_character(),
License = readr::col_character(),
.default = readr::col_logical()
)) %>%
dplyr::rename(Name = Tool,
Platform = Programming_Language,
DOIs = DOI,
Description = Details,
Code = Source)
swsheet <- swsheet[order(swsheet$Name),]
# getting the publication details for the tools
titles <- readr::read_csv("docs/data/titles.csv",
col_types = readr::cols(
DOI   = readr::col_character(),
Title = readr::col_character(),
PubDate = readr::col_date()
)
)
swsheet$PubDates <- titles$PubDate[match(swsheet$DOIs,titles$DOI)]
`%>%` <- magrittr::`%>%`
swsheet$PubDates <- as.Date.character(as.character(swsheet$PubDates))
swsheet.original <- swsheet
swsheet          <- swsheet[!is.na(swsheet$PubDates),]
#nanopore
# datecount_nanopore <- swsheet %>%
#   dplyr::select(Date = PubDates,
#                 technology = "OxfordNanopore") %>%
#   dplyr::filter(technology == TRUE) %>%
#   dplyr::group_by(Date = as.Date(Date)) %>%
#   dplyr::summarise(Count = n()) %>%
#   tidyr::complete(Date = tidyr::full_seq(Date, 1),
#                   fill = list(Count = 0)) %>%
#   dplyr::mutate(Total_nanopore = cumsum(Count))
datecount_nanopore <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "OxfordNanopore") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_nanopore$Date[nrow(datecount_nanopore)] != Sys.Date()) {
datecount_nanopore <- rbind(datecount_nanopore, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_nanopore <- datecount_nanopore %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_nanopore = cumsum(Count))
#pacbio
datecount_pacbio <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "PacBio") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_pacbio$Date[nrow(datecount_pacbio)] != Sys.Date()) {
datecount_pacbio <- rbind(datecount_pacbio, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_pacbio <- datecount_pacbio %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_pacbio = cumsum(Count))
#10X
datecount_tenx <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "tenxGenomics") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_tenx$Date[nrow(datecount_tenx)] != Sys.Date()) {
datecount_tenx <- rbind(datecount_tenx, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_tenx <- datecount_tenx %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_tenx = cumsum(Count))
#bionano
# datecount_bionano <- swsheet %>%
#   dplyr::select(Date = PubDates,
#                 technology = "BionanoGenomics") %>%
#   dplyr::filter(technology == TRUE) %>%
#   dplyr::group_by(Date = as.Date(Date)) %>%
#   dplyr::summarise(Count = n()) %>%
#   tidyr::complete(Date = tidyr::full_seq(Date, 1),
#                   fill = list(Count = 0)) %>%
#   dplyr::mutate(Total_bionano = cumsum(Count))
datecount_bionano <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "BionanoGenomics") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_bionano$Date[nrow(datecount_bionano)] != Sys.Date()) {
datecount_bionano <- rbind(datecount_bionano, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_bionano <- datecount_bionano %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_bionano = cumsum(Count))
#seq.Date(from = df$date[1], length.out = dim(df)[1], by = "day")
#Hi-C
datecount_hic <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "HiC") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_hic$Date[nrow(datecount_hic)] != Sys.Date()) {
datecount_hic <- rbind(datecount_hic, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_hic <- datecount_hic %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_hic = cumsum(Count))
#plyr::rbind_fill() for binding all the above tibbles together across rows
datecount_tech <- plyr::rbind.fill(datecount_nanopore, datecount_pacbio, datecount_tenx, datecount_bionano, datecount_hic)
#replace 'NA"s with zeros
datecount_tech[is.na(datecount_tech)] <- 0
# a bit of fiddling around and subsetting the tibble to get the desired long tibble to melt
datecount_tech <- datecount_tech[,c("Date", "Total_nanopore", "Total_pacbio", "Total_tenx", "Total_bionano", "Total_hic")]
#datecount_tech_long <- reshape2::melt(datecount_tech, id.vars = "Date")
#ggplot(datecount_tech_long, aes(x=Date, fill=variable)) + geom_density(alpha=0.25)
#ggplot2::ggplot(datecount_tech_long, ggplot2::aes(x = Date, y = value)) +
#  ggplot2::geom_line(size = 2, colour = "#54b9a1")
#melting and changing some aesthetics to create downstream plot
datecount_tech_long <- reshape2::melt(datecount_tech, id.vars = "Date")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_nanopore", "Oxford Nanopore")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_pacbio", "PacBio")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_tenx", "10X Genomics")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_bionano", "Bionano Genomics")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_hic", "Hi-C")
datecount_tech_long$variable <- as.factor(datecount_tech_long$variable)
datecount_tech_long$variable <- factor(datecount_tech_long$variable, levels=c("Oxford Nanopore", "PacBio", "10X Genomics", "Bionano Genomics", "Hi-C"))
#line plot with fill option to achieve the desired output : density plot doesn't work for this
plot <- ggplot(datecount_tech_long, aes(x=Date, y=value, colour=variable)) +
geom_line(alpha=0.4) +
ggplot2::xlab("Years") +
ggplot2::ylab("Number of Tools") +
labs (x="Years", y="Number of Tools", color="Long Read \nSequencing Technologies") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_text(size=24),
axis.title.y = ggplot2::element_text(size=24),
axis.text    = ggplot2::element_text(size = 20),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=24),
legend.title = element_text(size=30),
legend.position="none",
legend.key=element_rect(fill=NA)
)+
guides(colour = guide_legend(override.aes = list(size = 10))) +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
plot
plot <- ggplot(data = datecount_tech_long,
aes(y = value, x = Date, fill = variable)) +
geom_bar(stat="identity") +
ggplot2::ggtitle("Tools Across Time") +
labs (x="", y="Number of Tools", color="Long Read \nSequencing Technologies") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 20,
face = "bold"),
axis.title.x = ggplot2::element_text(size=14),
axis.title.y = ggplot2::element_text(size=14),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=12),
legend.title = element_blank(),
legend.position="bottom",
legend.key=element_rect(fill=NA)
)+
scale_fill_brewer(palette="Set2") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
plot
plot
plot <- ggplot(data = datecount_tech_long,
aes(y = value, x = Date, fill = variable)) +
geom_bar(stat="identity") +
labs (x="", y="Number of Tools", color="Long Read \nSequencing Technologies") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_text(size=24),
axis.title.y = ggplot2::element_text(size=24),
axis.text    = ggplot2::element_text(size = 20),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=24),
legend.title = element_blank(),
legend.position="right",
legend.key=element_rect(fill=NA)
)+
scale_fill_brewer(palette="Set2") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
plot
png("../Manuscript_figures/Archived/Figure2p1_withlegend_20082019"); plot; dev.off()
plot <- ggplot(data = datecount_tech_long,
aes(y = value, x = Date, fill = variable)) +
geom_bar(stat="identity") +
labs (x="", y="Number of Tools", color="Long Read \nSequencing Technologies") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_text(size=24),
axis.title.y = ggplot2::element_text(size=24),
axis.text    = ggplot2::element_text(size = 20),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=24),
legend.title = element_blank(),
legend.position="none",
legend.key=element_rect(fill=NA)
)+
scale_fill_brewer(palette="Set2") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
png("../Manuscript_figures/Archived/Figure2p1_20082019.png"); plot; dev.off()
pdf("../Manuscript_figures/Archived/Figure2p1_20082019.pdf"); plot; dev.off()
pdf("../Manuscript_figures/Archived/Figure2p1_20082019.pdf", width = 11.68, height = 6.28); plot; dev.off()
pdf("../Manuscript_figures/Archived/Figure2p1_20082019.pdf", width = 11.68, height = 6.28); plot; dev.off()
catcounts <- swsheet.original %>%
dplyr::summarise_at(12:42, sum) %>%
tidyr::gather(key = Category, value = Count) %>%
dplyr::arrange(-Count, Category) %>%
dplyr::mutate(Prop = Count / nrow(swsheet)) %>%
dplyr::mutate(Category = ifelse(Category == "SNPAndVariantAnalysis", "SNP And Variant Analysis",
ifelse(Category == "polyALengthEstimation", "polyA Length Estimation",
ifelse(Category == "fast5FileProcessing", "fast5 File Processing", gsub("([a-z])([A-Z])", "\\1 \\2", Category)))))%>%
dplyr::mutate(Category = stringr::str_trim(Category)) %>%
dplyr::mutate(Category = factor(Category, levels = Category)) %>%
dplyr::mutate(Percent = round(Prop * 100, 1))
plot <- ggplot2::ggplot(catcounts,
ggplot2::aes(x = Category, weight = Prop,
text = paste("Count:", Count, "\n",
"Percent:", Percent))) +
ggplot2::geom_bar(fill="coral") +
cowplot::theme_cowplot() +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::ylab("Percentage of Tools") +
ggplot2::theme(axis.title.x = ggplot2::element_blank(),
axis.title.y = ggplot2::element_text(size=24),
axis.text       = ggplot2::element_text(size = 20),
axis.text.x     = ggplot2::element_text(angle = 60,
hjust = 1,
vjust = 1)
)
pdf("../Manuscript_figures/Archived/Figure2p2_20082019.pdf", width = 11.68, height = 6.28); plot; dev.off()
plot
plot <- ggplot2::ggplot(catcounts,
ggplot2::aes(x = Category, weight = Prop,
text = paste("Count:", Count, "\n",
"Percent:", Percent))) +
ggplot2::geom_bar(fill="coral") +
cowplot::theme_cowplot() +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::ylab("Percentage of Tools") +
ggplot2::theme(axis.title.x = ggplot2::element_blank(),
axis.title.y = ggplot2::element_text(size=24),
axis.text       = ggplot2::element_text(size = 18),
axis.text.x     = ggplot2::element_text(angle = 60,
hjust = 1,
vjust = 1)
)
plot
library(readr)
library(jsonlite)
library(docopt)
library(pbapply)
library(magrittr)
library(futile.logger)
library(aRxiv)
library(reshape2)
library(dplyr)
library(ggplot2)
# load the swsheet here
swsheet <- readr::read_csv("../lrs_db/lrs_tools_master.csv", # get the correct path
col_types = readr::cols(
Tool = readr::col_character(),
DOI = readr::col_character(),
Programming_Language = readr::col_character(),
Details = readr::col_character(),
Source = readr::col_character(),
License = readr::col_character(),
.default = readr::col_logical()
)) %>%
dplyr::rename(Name = Tool,
Platform = Programming_Language,
DOIs = DOI,
Description = Details,
Code = Source)
swsheet <- swsheet[order(swsheet$Name),]
# getting the publication details for the tools
titles <- readr::read_csv("docs/data/titles.csv",
col_types = readr::cols(
DOI   = readr::col_character(),
Title = readr::col_character(),
PubDate = readr::col_date()
)
)
swsheet$PubDates <- titles$PubDate[match(swsheet$DOIs,titles$DOI)]
`%>%` <- magrittr::`%>%`
swsheet$PubDates <- as.Date.character(as.character(swsheet$PubDates))
swsheet.original <- swsheet
swsheet          <- swsheet[!is.na(swsheet$PubDates),]
#nanopore
# datecount_nanopore <- swsheet %>%
#   dplyr::select(Date = PubDates,
#                 technology = "OxfordNanopore") %>%
#   dplyr::filter(technology == TRUE) %>%
#   dplyr::group_by(Date = as.Date(Date)) %>%
#   dplyr::summarise(Count = n()) %>%
#   tidyr::complete(Date = tidyr::full_seq(Date, 1),
#                   fill = list(Count = 0)) %>%
#   dplyr::mutate(Total_nanopore = cumsum(Count))
datecount_nanopore <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "OxfordNanopore") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_nanopore$Date[nrow(datecount_nanopore)] != Sys.Date()) {
datecount_nanopore <- rbind(datecount_nanopore, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_nanopore <- datecount_nanopore %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_nanopore = cumsum(Count))
#pacbio
datecount_pacbio <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "PacBio") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_pacbio$Date[nrow(datecount_pacbio)] != Sys.Date()) {
datecount_pacbio <- rbind(datecount_pacbio, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_pacbio <- datecount_pacbio %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_pacbio = cumsum(Count))
#10X
datecount_tenx <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "tenxGenomics") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_tenx$Date[nrow(datecount_tenx)] != Sys.Date()) {
datecount_tenx <- rbind(datecount_tenx, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_tenx <- datecount_tenx %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_tenx = cumsum(Count))
#bionano
# datecount_bionano <- swsheet %>%
#   dplyr::select(Date = PubDates,
#                 technology = "BionanoGenomics") %>%
#   dplyr::filter(technology == TRUE) %>%
#   dplyr::group_by(Date = as.Date(Date)) %>%
#   dplyr::summarise(Count = n()) %>%
#   tidyr::complete(Date = tidyr::full_seq(Date, 1),
#                   fill = list(Count = 0)) %>%
#   dplyr::mutate(Total_bionano = cumsum(Count))
datecount_bionano <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "BionanoGenomics") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_bionano$Date[nrow(datecount_bionano)] != Sys.Date()) {
datecount_bionano <- rbind(datecount_bionano, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_bionano <- datecount_bionano %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_bionano = cumsum(Count))
#seq.Date(from = df$date[1], length.out = dim(df)[1], by = "day")
#Hi-C
datecount_hic <- swsheet %>%
dplyr::select(Date = PubDates,
technology = "HiC") %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n())
if (datecount_hic$Date[nrow(datecount_hic)] != Sys.Date()) {
datecount_hic <- rbind(datecount_hic, data.frame(Date = Sys.Date(), Count = 0))
}
datecount_hic <- datecount_hic %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total_hic = cumsum(Count))
#plyr::rbind_fill() for binding all the above tibbles together across rows
datecount_tech <- plyr::rbind.fill(datecount_nanopore, datecount_pacbio, datecount_tenx, datecount_bionano, datecount_hic)
#replace 'NA"s with zeros
datecount_tech[is.na(datecount_tech)] <- 0
# a bit of fiddling around and subsetting the tibble to get the desired long tibble to melt
datecount_tech <- datecount_tech[,c("Date", "Total_nanopore", "Total_pacbio", "Total_tenx", "Total_bionano", "Total_hic")]
#datecount_tech_long <- reshape2::melt(datecount_tech, id.vars = "Date")
#ggplot(datecount_tech_long, aes(x=Date, fill=variable)) + geom_density(alpha=0.25)
#ggplot2::ggplot(datecount_tech_long, ggplot2::aes(x = Date, y = value)) +
#  ggplot2::geom_line(size = 2, colour = "#54b9a1")
#melting and changing some aesthetics to create downstream plot
datecount_tech_long <- reshape2::melt(datecount_tech, id.vars = "Date")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_nanopore", "Oxford Nanopore")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_pacbio", "PacBio")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_tenx", "10X Genomics")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_bionano", "Bionano Genomics")
datecount_tech_long$variable <- stringr::str_replace(datecount_tech_long$variable, "Total_hic", "Hi-C")
datecount_tech_long$variable <- as.factor(datecount_tech_long$variable)
datecount_tech_long$variable <- factor(datecount_tech_long$variable, levels=c("Oxford Nanopore", "PacBio", "10X Genomics", "Bionano Genomics", "Hi-C"))
#line plot with fill option to achieve the desired output : density plot doesn't work for this
plot <- ggplot(datecount_tech_long, aes(x=Date, y=value, colour=variable)) +
geom_line(alpha=0.4) +
ggplot2::xlab("Years") +
ggplot2::ylab("Number of Tools") +
labs (x="Years", y="Number of Tools", color="Long Read \nSequencing Technologies") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_text(size=24),
axis.title.y = ggplot2::element_text(size=24),
axis.text    = ggplot2::element_text(size = 20),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=24),
legend.title = element_text(size=30),
legend.position="none",
legend.key=element_rect(fill=NA)
)+
guides(colour = guide_legend(override.aes = list(size = 10))) +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
plot
plot <- ggplot(data = datecount_tech_long,
aes(y = value, x = Date, fill = variable)) +
geom_bar(stat="identity") +
labs (x="", y="Number of Tools", color="Long Read \nSequencing Technologies") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_text(size=24),
axis.title.y = ggplot2::element_text(size=24),
axis.text    = ggplot2::element_text(size = 20),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5),
legend.text = element_text(size=24),
legend.title = element_blank(),
legend.position="none",
legend.key=element_rect(fill=NA)
)+
scale_fill_brewer(palette="Set2") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10))
plot
catcounts <- swsheet.original %>%
dplyr::summarise_at(12:42, sum) %>%
tidyr::gather(key = Category, value = Count) %>%
dplyr::arrange(-Count, Category) %>%
dplyr::mutate(Prop = Count / nrow(swsheet)) %>%
dplyr::mutate(Category = ifelse(Category == "SNPAndVariantAnalysis", "SNP And Variant Analysis",
ifelse(Category == "polyALengthEstimation", "polyA Length Estimation",
ifelse(Category == "fast5FileProcessing", "fast5 File Processing", gsub("([a-z])([A-Z])", "\\1 \\2", Category)))))%>%
dplyr::mutate(Category = stringr::str_trim(Category)) %>%
dplyr::mutate(Category = factor(Category, levels = Category)) %>%
dplyr::mutate(Percent = round(Prop * 100, 1))
plot <- ggplot2::ggplot(catcounts,
ggplot2::aes(x = Category, weight = Prop,
text = paste("Count:", Count, "\n",
"Percent:", Percent))) +
ggplot2::geom_bar(fill="coral") +
cowplot::theme_cowplot() +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::ylab("Percentage of Tools") +
ggplot2::theme(axis.title.x = ggplot2::element_blank(),
axis.title.y = ggplot2::element_text(size=24),
axis.text       = ggplot2::element_text(size = 18),
axis.text.x     = ggplot2::element_text(angle = 60,
hjust = 1,
vjust = 1)
)
plot
install.packages("aRxiv")
install.packages("anytime")
install.packages("rvest")
install.packages("widgetframe")
