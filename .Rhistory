#     )
#
#   plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
#     plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
#
#   htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
#                           file.path(getwd(), paste("docs/plots/number_", technology,".html", sep="")),
#                           selfcontained = FALSE, libdir = "libraries")
#
# }
}
plot_number(swsheet)
plot_number <- function(swsheet) {
`%>%` <- magrittr::`%>%`
titlescache <- NULL
for (dois in swsheet$DOIs) {
for (doi in stringr::str_split(dois, ";")[[1]]) {
if (!is.na(doi)) {
if (stringr::str_detect(doi, "arxiv")) {
id <- stringr::str_remove(doi, "arxiv/")
title <- aRxiv::arxiv_search(id_list = id)$title
date <- NA
} else {
crossref <- rcrossref::cr_works(doi)
title <- crossref$data$title
date <- crossref$data$issued
date <- as.character(date)
}
if (!is.null(title)) {
temp_df <-  data.frame(DOI = doi,
Title = title,
PubDate = suppressWarnings(readr::parse_date(date, na = NA_character_)) %>%
lubridate::as_date())
temp_df$DOI <- as.character(temp_df$DOI)
temp_df$Title <- as.character(temp_df$Title)
titlescache <- dplyr::bind_rows(titlescache,
temp_df)
}
}
}
}
swsheet2 <- cbind(swsheet, titles_cache[match(swsheet$DOIs, titles_cache$DOI),])
swsheet2 <- swsheet2 %>% tidyr::drop_na()
# all tools over time
datecount <- swsheet2 %>%
dplyr::select(Date = PubDate) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n()) %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total = cumsum(Count))
plot <- ggplot2::ggplot(datecount, ggplot2::aes(x = Date, y = Total)) +
ggplot2::geom_line(size = 2, colour = "#51c7b4") +
ggplot2::xlab("Date") +
ggplot2::ylab("Number of tools") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10)) +
ggplot2::ggtitle("Number of tools over time") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 20),
axis.title.x = ggplot2::element_blank(),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), "docs/plots/number.html"),
selfcontained = FALSE, libdir = "libraries")
# tools for different technologies over time
technologies <- colnames(swsheet2[7:12])
for (technology in technologies){
technology2 <- technology
technology2 <- ifelse(technology2  == "tenxGenomics", "10X Genomics", technology2)
technology2 <- ifelse(technology2 == "OxfordNanopore", "Oxford Nanopore", technology2)
technology2 <- ifelse(technology2 == "BionanoGenomics", "Bio-Nano Genomics", technology2)
technology2 <- ifelse(technology2 == "HiC", "Hi-C", technology2)
datecount_tech <- swsheet2 %>%
dplyr::select(Date = PubDate,
technology = technology) %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n()) %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total = cumsum(Count))
plot <- ggplot2::ggplot(datecount_tech, ggplot2::aes(x = Date, y = Total)) +
ggplot2::geom_line(size = 2, colour = "#7A52C7") +
ggplot2::xlab("Date") +
ggplot2::ylab("Number of tools") +
ggplot2::ggtitle(paste(technology2," focused", sep ="")) +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10)) +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_blank(),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), paste("docs/plots/number_", technology,".html", sep="")),
selfcontained = FALSE, libdir = "libraries")
}
}
plot_number(swsheet)
titlescache <- NULL
rm(titlescache)
plot_number <- function(swsheet) {
`%>%` <- magrittr::`%>%`
titlescache <- NULL
for (dois in swsheet$DOIs) {
for (doi in stringr::str_split(dois, ";")[[1]]) {
if (!is.na(doi)) {
if (stringr::str_detect(doi, "arxiv")) {
id <- stringr::str_remove(doi, "arxiv/")
title <- aRxiv::arxiv_search(id_list = id)$title
date <- NA
} else {
crossref <- rcrossref::cr_works(doi)
title <- crossref$data$title
date <- crossref$data$issued
date <- as.character(date)
}
if (!is.null(title)) {
temp_df <-  data.frame(DOI = doi,
Title = title,
PubDate = suppressWarnings(readr::parse_date(date, na = NA_character_)) %>%
lubridate::as_date())
temp_df$DOI <- as.character(temp_df$DOI)
temp_df$Title <- as.character(temp_df$Title)
titlescache <- dplyr::bind_rows(titlescache,
temp_df)
}
}
}
}
swsheet2 <- cbind(swsheet, titles_cache[match(swsheet$DOIs, titlescache$DOI),])
swsheet2 <- swsheet2 %>% tidyr::drop_na()
# all tools over time
datecount <- swsheet2 %>%
dplyr::select(Date = PubDate) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n()) %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total = cumsum(Count))
plot <- ggplot2::ggplot(datecount, ggplot2::aes(x = Date, y = Total)) +
ggplot2::geom_line(size = 2, colour = "#51c7b4") +
ggplot2::xlab("Date") +
ggplot2::ylab("Number of tools") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10)) +
ggplot2::ggtitle("Number of tools over time") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 20),
axis.title.x = ggplot2::element_blank(),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), "docs/plots/number.html"),
selfcontained = FALSE, libdir = "libraries")
# tools for different technologies over time
technologies <- colnames(swsheet2[7:12])
for (technology in technologies){
technology2 <- technology
technology2 <- ifelse(technology2  == "tenxGenomics", "10X Genomics", technology2)
technology2 <- ifelse(technology2 == "OxfordNanopore", "Oxford Nanopore", technology2)
technology2 <- ifelse(technology2 == "BionanoGenomics", "Bio-Nano Genomics", technology2)
technology2 <- ifelse(technology2 == "HiC", "Hi-C", technology2)
datecount_tech <- swsheet2 %>%
dplyr::select(Date = PubDate,
technology = technology) %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n()) %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total = cumsum(Count))
plot <- ggplot2::ggplot(datecount_tech, ggplot2::aes(x = Date, y = Total)) +
ggplot2::geom_line(size = 2, colour = "#7A52C7") +
ggplot2::xlab("Date") +
ggplot2::ylab("Number of tools") +
ggplot2::ggtitle(paste(technology2," focused", sep ="")) +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10)) +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_blank(),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), paste("docs/plots/number_", technology,".html", sep="")),
selfcontained = FALSE, libdir = "libraries")
}
}
plot_number(swsheet)
}
plot_number <- function(swsheet) {
`%>%` <- magrittr::`%>%`
titlescache <- NULL
for (dois in swsheet$DOIs) {
for (doi in stringr::str_split(dois, ";")[[1]]) {
if (!is.na(doi)) {
if (stringr::str_detect(doi, "arxiv")) {
id <- stringr::str_remove(doi, "arxiv/")
title <- aRxiv::arxiv_search(id_list = id)$title
date <- NA
} else {
crossref <- rcrossref::cr_works(doi)
title <- crossref$data$title
date <- crossref$data$issued
date <- as.character(date)
}
if (!is.null(title)) {
temp_df <-  data.frame(DOI = doi,
Title = title,
PubDate = suppressWarnings(readr::parse_date(date, na = NA_character_)) %>%
lubridate::as_date())
temp_df$DOI <- as.character(temp_df$DOI)
temp_df$Title <- as.character(temp_df$Title)
titlescache <- dplyr::bind_rows(titlescache,
temp_df)
}
}
}
}
swsheet2 <- cbind(swsheet, titles_cache[match(swsheet$DOIs, titlescache$DOI),])
swsheet2 <- swsheet2 %>% tidyr::drop_na()
# all tools over time
datecount <- swsheet2 %>%
dplyr::select(Date = PubDate) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n()) %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total = cumsum(Count))
plot <- ggplot2::ggplot(datecount, ggplot2::aes(x = Date, y = Total)) +
ggplot2::geom_line(size = 2, colour = "#51c7b4") +
ggplot2::xlab("Date") +
ggplot2::ylab("Number of tools") +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10)) +
ggplot2::ggtitle("Number of tools over time") +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 20),
axis.title.x = ggplot2::element_blank(),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), "docs/plots/number.html"),
selfcontained = FALSE, libdir = "libraries")
# tools for different technologies over time
technologies <- colnames(swsheet2[7:12])
for (technology in technologies){
technology2 <- technology
technology2 <- ifelse(technology2  == "tenxGenomics", "10X Genomics", technology2)
technology2 <- ifelse(technology2 == "OxfordNanopore", "Oxford Nanopore", technology2)
technology2 <- ifelse(technology2 == "BionanoGenomics", "Bio-Nano Genomics", technology2)
technology2 <- ifelse(technology2 == "HiC", "Hi-C", technology2)
datecount_tech <- swsheet2 %>%
dplyr::select(Date = PubDate,
technology = technology) %>%
dplyr::filter(technology == TRUE) %>%
dplyr::group_by(Date = as.Date(Date)) %>%
dplyr::summarise(Count = n()) %>%
tidyr::complete(Date = tidyr::full_seq(Date, 1),
fill = list(Count = 0)) %>%
dplyr::mutate(Total = cumsum(Count))
plot <- ggplot2::ggplot(datecount_tech, ggplot2::aes(x = Date, y = Total)) +
ggplot2::geom_line(size = 2, colour = "#7A52C7") +
ggplot2::xlab("Date") +
ggplot2::ylab("Number of tools") +
ggplot2::ggtitle(paste(technology2," focused", sep ="")) +
ggplot2::scale_x_date(breaks = scales::pretty_breaks(10)) +
cowplot::theme_cowplot() +
ggplot2::theme(plot.title   = ggplot2::element_text(size = 12),
axis.title.x = ggplot2::element_blank(),
axis.text    = ggplot2::element_text(size = 12),
axis.text.x  = ggplot2::element_text(angle = 60,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), paste("docs/plots/number_", technology,".html", sep="")),
selfcontained = FALSE, libdir = "libraries")
}
}
plot_number(swsheet)
plot_number(swsheet)
cbind(swsheet, titlescache$PubDate[match(swsheet$DOIs, titlescache$DOI)])
cbind(swsheet, titles_cache$PubDate[match(swsheet$DOIs, titles_cache$DOI)])
class(swsheet)
print(sapply(swsheet, class))
??seq.Date
??seq.Date
head(datecount_nanopore)
for (technology in technologies){
technology2 <- technology
technology2 <- ifelse(technology2  == "tenxGenomics", "10X Genomics", technology2)
technology2 <- ifelse(technology2 == "OxfordNanopore", "Oxford Nanopore", technology2)
technology2 <- ifelse(technology2 == "BionanoGenomics", "Bio-Nano Genomics", technology2)
technology2 <- ifelse(technology2 == "HiC", "Hi-C", technology2)
catcounts_tech <- swsheet %>%
dplyr::filter(technology == TRUE) %>%
dplyr::summarise_at(13:38, sum) %>%
tidyr::gather(key = Category, value = Count) %>%
dplyr::arrange(-Count, Category) %>%
dplyr::mutate(Prop = Count / nrow(swsheet)) %>%
dplyr::mutate(Category = ifelse(Category == "SNPAndVariantAnalysis", "SNP And Variant Analysis", gsub("([a-z])([A-Z])", "\\1 \\2", Category)))%>%
dplyr::mutate(Category = stringr::str_trim(Category)) %>%
dplyr::mutate(Category = factor(Category, levels = Category)) %>%
dplyr::mutate(Percent = round(Prop * 100, 1))
plot <- ggplot2::ggplot(catcounts_tech,
ggplot2::aes(x = Category, weight = Prop,
text = paste("Count:", Count, "\n",
"Percent:", Percent))) +
ggplot2::geom_bar(fill = "#6a3ec0") +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::ylab("Percentage of tools") +
ggplot2::ggtitle(paste(technology2," focused", sep ="")) +
cowplot::theme_cowplot() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(),
legend.position = "none",
legend.title    = ggplot2::element_text(size = 14),
legend.text     = ggplot2::element_text(size = 12),
legend.key.size = ggplot2::unit(25, "points"),
plot.title      = ggplot2::element_text(size = 20),
axis.text       = ggplot2::element_text(size = 12),
axis.text.x     = ggplot2::element_text(angle = 60, hjust = 1,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), paste("docs/plots/categories_", technology,".html", sep="")),
selfcontained = FALSE, libdir = "libraries")
}
technology
swsheet[technology] == TRUE
head(swsheet[technology] == TRUE)
head(swsheet[swsheet[technology] == TRUE])
head(swsheet[swsheet[technology] == TRUE],)
head(swsheet[,swsheet[technology] == TRUE])
head(swsheet[swsheet[technology] == TRUE,])
head(swsheet[swsheet[technology] == TRUE,], 1)
technologies
head(swsheet[,swsheet[technology] == TRUE])
head(subset(swsheet,swsheet[technology] == TRUE))
head(subset(swsheet,swsheet[technology] == TRUE)[1:4, 7:12])
head(subset(swsheet,swsheet[technology] == TRUE)[1:4, c(1, 7:12)])
head(subset(swsheet,swsheet[technology] == TRUE)[1:12, c(1, 7:12)])
head(swsheet[swsheet[technology] == TRUE,] [1:12, c(1, 7:12)])
for (technology in technologies){
technology2 <- technology
technology2 <- ifelse(technology2  == "tenxGenomics", "10X Genomics", technology2)
technology2 <- ifelse(technology2 == "OxfordNanopore", "Oxford Nanopore", technology2)
technology2 <- ifelse(technology2 == "BionanoGenomics", "Bio-Nano Genomics", technology2)
technology2 <- ifelse(technology2 == "HiC", "Hi-C", technology2)
swsheet2 <- swsheet[swsheet[technology] == TRUE,]
catcounts_tech <- swsheet2 %>%
dplyr::summarise_at(13:38, sum) %>%
tidyr::gather(key = Category, value = Count) %>%
dplyr::arrange(-Count, Category) %>%
dplyr::mutate(Prop = Count / nrow(swsheet)) %>%
dplyr::mutate(Category = ifelse(Category == "SNPAndVariantAnalysis", "SNP And Variant Analysis", gsub("([a-z])([A-Z])", "\\1 \\2", Category)))%>%
dplyr::mutate(Category = stringr::str_trim(Category)) %>%
dplyr::mutate(Category = factor(Category, levels = Category)) %>%
dplyr::mutate(Percent = round(Prop * 100, 1))
plot <- ggplot2::ggplot(catcounts_tech,
ggplot2::aes(x = Category, weight = Prop,
text = paste("Count:", Count, "\n",
"Percent:", Percent))) +
ggplot2::geom_bar(fill = "#6a3ec0") +
ggplot2::scale_y_continuous(labels = scales::percent) +
ggplot2::ylab("Percentage of tools") +
ggplot2::ggtitle(paste(technology2," focused", sep ="")) +
cowplot::theme_cowplot() +
ggplot2::theme(axis.title.x = ggplot2::element_blank(),
legend.position = "none",
legend.title    = ggplot2::element_text(size = 14),
legend.text     = ggplot2::element_text(size = 12),
legend.key.size = ggplot2::unit(25, "points"),
plot.title      = ggplot2::element_text(size = 20),
axis.text       = ggplot2::element_text(size = 12),
axis.text.x     = ggplot2::element_text(angle = 60, hjust = 1,
vjust = 0.5)
)
plot <- plotly::ggplotly(plot, dynamicTicks = TRUE) %>%
plotly::layout(margin = list(l = 70, r = 40, b = 90, t = 50))
htmlwidgets::saveWidget(widgetframe::frameableWidget(plot),
file.path(getwd(), paste("docs/plots/categories_", technology,".html", sep="")),
selfcontained = FALSE, libdir = "libraries")
}
swsheet <- readr::read_csv("lrs_tools_master.csv",
col_types = readr::cols(
Tool = readr::col_character(),
DOI = readr::col_character(),
Programming_Language = readr::col_character(),
Details = readr::col_character(),
Source = readr::col_character(),
License = readr::col_character(),
.default = readr::col_logical()
)) %>%
dplyr::rename(Name = Tool,
Platform = Programming_Language,
DOIs = DOI,
Description = Details,
Code = Source)
swsheet <- swsheet[order(swsheet$Name),]
library(dplyr)
swsheet <- readr::read_csv("lrs_tools_master.csv",
col_types = readr::cols(
Tool = readr::col_character(),
DOI = readr::col_character(),
Programming_Language = readr::col_character(),
Details = readr::col_character(),
Source = readr::col_character(),
License = readr::col_character(),
.default = readr::col_logical()
)) %>%
dplyr::rename(Name = Tool,
Platform = Programming_Language,
DOIs = DOI,
Description = Details,
Code = Source)
swsheet <- swsheet[order(swsheet$Name),]
swsheet2 <- tidyr::gather(swsheet, key = 'Category', value = 'Val',
BaseCalling, LongReadOverlapping, DenovoAssembly,Alignment, Scaffolding,
GeneratingConsensusSequence,ErrorCorrectionAndPolishing,EvaluatingExisitingMethods,
IsoformDetection,	BaseModificationDetection,	QualityChecking,SNPAndVariantAnalysis,
Visualisation,	ReadQuantification,	SuitableForSingleCellExperiments,
TestedOnHumanData,TestedOnNonHumanData,Normalisation,ProvideSummaryStatistics,
QualityTrimming,AvailablityOfTestData,GeneExpressionAnalysis,GapFilling,
AnalysisPipelines, QualityFiltering, Metagenomics, Simulators, Demultiplexing) %>%
dplyr::filter(Val == TRUE) %>%
dplyr::select(-Val) %>%
dplyr::arrange(Name)
head(swsheet2)
swsheet3 <- tidyr::gather(swsheet, key = 'Tool', value = 'Val',
swsheet$Name) %>%
dplyr::filter(Val == TRUE) %>%
dplyr::select(-Val) %>%
dplyr::arrange(Category)
head(t(swsheet))
head(t(swsheet),1)
names(t(swsheet))
colnames(t(swsheet))
str(t(swsheet))
rownames(t(swsheet))
t(swsheet)[1,]
swsheet3 < -t(swsheet)
swsheet3 <- t(swsheet)
colnames(swsheet3) <- swsheet3[1,]
swsheet3 <- swsheet3[ -1, ]
head(swsheet3)
head(swsheet3 [1, 10])
head(swsheet3 [1, 1:10])
head(swsheet3 [1, 1:15])
head(swsheet3 [2, 1:15])
str(swsheet3)
swsheet3 <- tidyr::gather(swsheet3, key = 'Tool', value = 'Val',
colnames(swsheet3)) %>%
dplyr::filter(Val == TRUE) %>%
dplyr::select(-Val) %>%
dplyr::arrange(Category)
colnames(swsheet3)
class(colnames(swsheet3))
swsheet3 <- tidyr::gather(swsheet3, key = 'Tool', value = 'Val',
colnames(swsheet3)) %>%
dplyr::filter(Val == TRUE) %>%
dplyr::select(-Val) %>%
dplyr::arrange(Category)
class(colnames(swsheet))
swsheet4 <- tidyr::gather(swsheet3, key = 'Tool', value = 'Val',
colnames(swsheet3)) %>%
dplyr::filter(Val == TRUE) %>%
dplyr::select(-Val) %>%
dplyr::arrange(Category)
swsheet4 <- tidyr::gather(swsheet3, key = 'Tool', value = 'Val',
as.character(colnames(swsheet3))) %>%
dplyr::filter(Val == TRUE) %>%
dplyr::select(-Val) %>%
dplyr::arrange(Category)
swsheet3$rows <- rownames(swsheet3)
rownames(swsheet3)
row.names(swsheet3)
swsheet3 <- t(swsheet)
colnames(swsheet3) <- swsheet3[1,]
swsheet3 <- swsheet3[ -1, ]
rownames(swsheet3)
swsheet$namedofrows <- rownames(swsheet3)
swsheet3$namedofrows <- rownames(swsheet3)
rownames(swsheet3)
swsheet3 <- t(swsheet)
colnames(swsheet3) <- swsheet3[1,]
swsheet3 <- swsheet3[ -1, ]
swsheet3$namedofrows <- as,character(rownames(swsheet3))
swsheet3$namedofrows <- as.character(rownames(swsheet3))
swsheet3$namedofrows
swsheet3$``
