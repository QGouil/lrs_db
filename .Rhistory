})
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
skip_cites
!skip_cites
if (skip_cites) {
msg <- "Skipping downloading of citations from Crossref!"
futile.logger::flog.warn(msg)
}
if (skip_cites=="TRUE") {
msg <- "Skipping downloading of citations from Crossref!"
futile.logger::flog.warn(msg)
}
msg
if (skip_cites=="TRUE") {
msg <- "Skipping downloading of citations from Crossref!"
ptinr(futile.logger::flog.warn(msg))
}
if (skip_cites=="FALSE") {
msg <- "Skipping downloading of citations from Crossref!"
ptinr(futile.logger::flog.warn(msg))
}
if (skip_cites=="FALSE") {
msg <- "Skipping downloading of citations from Crossref!"
print(futile.logger::flog.warn(msg))
}
if (skip_cites) {
msg <- "Skipping downloading of citations from Crossref!"
print(futile.logger::flog.warn(msg))
}
if (!skip_cites) {
msg <- "Skipping downloading of citations from Crossref!"
print(futile.logger::flog.warn(msg))
}
add_refs <- function(swsheet, titles_cache, skip_cites) {
`%>%` <- magrittr::`%>%`
futile.logger::flog.info("Adding references...")
if (skip_cites=="TRUE") {
msg <- "Skipping downloading of citations from Crossref!"
futile.logger::flog.warn(msg)
}
doi_list <- swsheet %>%
dplyr::mutate(DOIs = stringr::str_split(DOIs, ";")) %>%
dplyr::pull(DOIs) %>%
setNames(swsheet$Name)
ref_list <- pbapply::pbsapply(names(doi_list), function(x) {
dois <- doi_list[[x]]
if (all(is.na(dois))) {
return(NA)
}
if (skip_cites=="FALSE") {
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
Sys.sleep(sample(seq(0, 1, 0.1), 1))
return(cite)
})
} else {
cites <- rep(NA, length(dois))
}
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
})
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
}
ref_list <- pbapply::pbsapply(names(doi_list), function(x) {
dois <- doi_list[[x]]
if (all(is.na(dois))) {
return(NA)
}
if (skip_cites=="FALSE") {
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
Sys.sleep(sample(seq(0, 1, 0.1), 1))
return(cite)
})
} else {
cites <- rep(NA, length(dois))
}
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
})
titles_cache <- get_cached_titles()
# Add new titles
titles_cache <- add_to_titles_cache(swsheet, titles_cache)
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
ref_list <- pbapply::pbsapply(names(doi_list), function(x) {
dois <- doi_list[[x]]
if (all(is.na(dois))) {
return(NA)
}
if (skip_cites=="FALSE") {
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
Sys.sleep(sample(seq(0, 1, 0.1), 1))
return(cite)
})
} else {
cites <- rep(NA, length(dois))
}
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
})
ref_list
ref_list[[1]]
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
pub_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == FALSE)
pre_list[[1]]
pub_list[[1]]
pre_list
head(pub_list)
head(pub_list)[[10]]
pub_list)[[10]
pub_list)[[10]]
pub_list[[10]]
pub_list[[10]]$Citations
pub_list[[10]]$Citations[[1]]
pub_list[[10]]$Citations[[2]]
swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(as.numeric(!is.na(x$Citations[[2]])))}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(anytime::anydate(x$PubDate), sep = ";")}))
swsheet2<- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(as.numeric(!is.na(x$Citations[[2]])))}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(anytime::anydate(x$PubDate), sep = ";")}))
swsheet2$Citations
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations)}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(anytime::anydate(x$PubDate), sep = ";")}))
ref_list <- pbapply::pbsapply(names(doi_list), function(x) {
dois <- doi_list[[x]]
if (all(is.na(dois))) {
return(NA)
}
if (skip_cites=="FALSE") {
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
Sys.sleep(sample(seq(0, 1, 0.1), 1))
return(cite)
})
} else {
cites <- rep(NA, length(dois))
}
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites[2,1])
})
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
pub_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == FALSE)
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations)}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(anytime::anydate(x$PubDate), sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
head(ref_list)
ref_list[[1]]$Citations
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations[[1]])}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(anytime::anydate(x$PubDate), sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
swsheet2$Citations
ref_list <- pbapply::pbsapply(names(doi_list), function(x) {
dois <- doi_list[[x]]
if (all(is.na(dois))) {
return(NA)
}
if (skip_cites=="FALSE") {
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
Sys.sleep(sample(seq(0, 1, 0.1), 1))
return(cite)
})
} else {
cites <- rep(NA, length(dois))
}
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
})
ref_list[[1]]$Citations[[2]]
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
pub_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == FALSE)
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations[[2]])}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(anytime::anydate(x$PubDate), sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
swsheet2$Citations
as.Date.character(swsheet2$PubDates, format = "%Y-%m-%d")
as.Date.character(swsheet2$PubDates)
swsheet2$PubDates
as.Date(swsheet2$PubDates, format = "%Y-%m-%d")
as.Date(as.character(swsheet2$PubDates))
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations[[2]])}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(x$PubDate, sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
as.Date(swsheet2$PubDates, format = "%Y-%m-%d")
as.Date.character(swsheet2$PubDates)
swsheet2$PubDates
class(swsheet2$PubDates)
class(swsheet2$PubDates[[1]])
swsheet2$PubDates[[1]]
ref_list[[1]]$PubDate
head(doi_list)
10.12688/f1000research.10571.2
doi <- "10.12688/f1000research.10571.2"
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
}
)
dois <- "10.12688/f1000research.10571.2"
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
dates
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
})
cites
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
dates
dois
cites
dois <- list("10.12688/f1000research.10571.2")
dois
names(dois) <- 10.12688/f1000research.10571.2
names(dates)
names(dois) <- "10.12688/f1000research.10571.2"
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
rlang::last_error()
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites)
ref
title()
titles
dois
dates
cites
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites[[2]])
ref
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
pub_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == FALSE)
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations)}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(x$PubDate, sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
ref$Citations
class(ref$Citations)
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations[[1]])}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(x$PubDate, sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
ref_list <- pbapply::pbsapply(names(doi_list), function(x) {
dois <- doi_list[[x]]
if (all(is.na(dois))) {
return(NA)
}
if (skip_cites=="FALSE") {
cites <- sapply(dois, function(doi) {
cite <- tryCatch({
rcrossref::cr_citation_count(doi)
}, error = function(e) {
NA
})
Sys.sleep(sample(seq(0, 1, 0.1), 1))
return(cite)
})
} else {
cites <- rep(NA, length(dois))
}
dates <- sapply(dois, function(doi) {
as.character(dplyr::pull(titles_cache[titles_cache$DOI == doi, ], "PubDate"))
})
titles <- get_titles(dois, titles_cache)
ref <- tibble::tibble(Title     = titles,
DOI       = dois,
PubDate   = dates,
Preprint  = stringr::str_detect(dois, paste(c(paste("10.1101/", stringr::regex("[0-9]{1,6}$", ignore_case = TRUE), sep=""),"arxiv"), collapse ="|")),
Citations = cites[[2]])
})
pre_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == TRUE)
pub_list <- purrr::map_if(ref_list, !is.na(ref_list),
dplyr::filter, Preprint == FALSE)
swsheet2 <- swsheet %>%
dplyr::mutate(Refs = purrr::map2(pub_list, pre_list,
function(x, y) {
list(Publications = x,
Preprints = y)
})) %>%
dplyr::mutate(Citations = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {sum(x$Citations)}),
Publications = purrr::map_if(pub_list, !is.na(pub_list),
nrow),
Preprints = purrr::map_if(pre_list, !is.na(pre_list),
nrow),
PubDates = purrr::map_if(ref_list, !is.na(ref_list),
function(x) {paste(x$PubDate, sep = ";")})) %>%
dplyr::mutate(Citations = purrr::flatten_dbl(Citations),
Publications = purrr::flatten_int(Publications),
Preprints = purrr::flatten_int(Preprints))
swsheet2
swsheet2$Citations
class(swsheet2$PubDates)
class(swsheet2$PubDates[[1]])
as.Date(class(swsheet2$PubDates[[1]]))
as.Date(class(swsheet2$PubDates[[2]]))
swsheet2$PubDates[[1]]
as.Date.character(swsheet2$PubDates[[1]])
class(as.Date.character(swsheet2$PubDates[[1]]))
swsheet2$PubDates
swsheet2$PubDates[[1]]
swsheet2$PubDates[[2]]
swsheet2$PubDates[[3]]
as.Date.character(swsheet2$PubDates)
as.Date.character(swsheet2$PubDates, format = "%Y-%m-%d")
